#!/usr/bin/env sh
# Script to process data and output temperature contour (and other stuff that I don't use).
# The temperature contour is output in a different format to the original code's implementation (t,x,y,T).

codeDir=$(cd "$(dirname "$0")" && pwd)

echo "codeDir: $codeDir"

input="$1"
max_jobs="${2:-1}"  # Set from second argument, default to 8
inputAbs=$(realpath "$input") # Get absolute path of input directory
bn=$(basename "$input")

cd "$(dirname "$inputAbs")" || exit 1

mv "$bn" results/
mkdir "$bn"
mv results "$bn/"

cd "$bn/results" || exit 1
ls > ../event_names.dat

job_count=0

for f in */; do
    (
        cd "$f" || exit 1
        mkdir -p results
        mv *.dat results/
        cp "$codeDir/hydro_analysis.e" .
        cp "$codeDir/parameters.dat" .
        ./hydro_analysis.e
        rm hydro_analysis.e
        # # Delete files listed in files_to_delete parameter
        # files_to_delete=$(grep '^files_to_delete' parameters.dat | cut -d'=' -f2 | cut -d'#' -f1 | tr -d ' ')
        # if [ -n "$files_to_delete" ]; then
        #     IFS=',' read -ra files <<< "$files_to_delete"
        #     for del_file in "${files[@]}"; do
        #         [ -n "$del_file" ] && rm -f "$del_file"
        #     done
        # fi
        cd ..
    ) &
    job_count=$((job_count+1))
    if [ "$job_count" -ge "$max_jobs" ]; then
        wait -n  # Wait for any job to finish
        job_count=$((job_count-1))
    fi

done
wait  # Wait for all background jobs to finish